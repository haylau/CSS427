
#define speakerPin 13

// Scale in the key of 25000
// Automatically generated by scaleGenerator.py

#include "scale8.h"
#define SPEAKER_DDR       DDRD
#define SPEAKER           PD6           /* OC0A */

#define NOTE_DURATION     0xF000        /* determines long note length */


char fromCompy;                        /* used to store serial input */
uint16_t currentNoteLength = NOTE_DURATION / 2;
const uint8_t keys[] = { 'A', 'W', 'S', 'E', 'D', 'F', 'T',
  'G', 'Y', 'H', 'J', 'I', 'K', 'O',
  'L', 'P', ';', '\''
};
uint8_t isNote;
uint8_t i;
 
static inline void playNote(uint8_t wavelength, uint16_t duration) {

  OCR0A = wavelength;                                     /* set pitch */
  SPEAKER_DDR |= (1 << SPEAKER);           /* enable output on speaker */

  while (duration) {                                 /* Variable delay */
    _delay_ms(1);
    duration--;
  }
  SPEAKER_DDR &= ~(1 << SPEAKER);                  /* turn speaker off */
}

static inline void initTimer(void) {
  // reset timer 0 control registers
  TCCR0B = 0;  
  TCCR0A = 0;
  
  TCCR0A |= (1 << WGM01);                                  /* CTC mode */
  TCCR0A |= (1 << COM0A0);           /* Toggles pin each cycle through */
  TCCR0B |= (1 << CS00) | (1 << CS01);               /* CPU clock / 64 */
}

void setup() {

  initTimer();

  // pinMode(13, OUTPUT); // OC0A as output
  pinMode(speakerPin, OUTPUT);

}

void loop() {

    playNote(C2, 200);
    playNote(E2, 200);
    playNote(G2, 200);
    playNote(C3, 400);

    _delay_ms(1000);
    _delay_ms(1000);
    _delay_ms(1000);
    
}
